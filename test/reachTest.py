import time as t
from pymycobot.mycobot import MyCobot

mc = MyCobot('COM11', 115200)
correctionVal = 6
correctionVal2 = correctionVal/2
speed = 30
point0 = [0, 0, 0, 0, 0, 0]
point1Approach = [104.64 + correctionVal2, (-27.9), (-71.56), 9.45 + correctionVal, 90, 104.64]#(6, 290, 40)
point1 = [104.64+ correctionVal2, (-32.34), (-82), 24.34 + correctionVal, 90, 104.64]#(6, 290, 5
point2Approach = [107.85+ correctionVal2,(-5.82),(-101),16.81 + correctionVal,90,107.85]#(6, 240, 40)
point2 = [107.85+ correctionVal2, (-12.47),(-111.6),34.06 + correctionVal,90,107.85]#(6, 240, 5)
point3Approach = [84.13+ correctionVal2, (-25.27),(-75.53),10.8 + correctionVal,90,84.13]#(106, 260, 40)
point3 = [84.14+ correctionVal2,(-30),(-85.84),25.84 + correctionVal,90,84.14]#(106, 260, 5)
point4Approach = [81.54+ correctionVal2, (-6.63), (-100.08), 16.71 + correctionVal, 90, 81.54]#(106, 210, 40)
point4 = [81.54+ correctionVal2, (-13.21), (-110.63), 33.84 + correctionVal, 90, 81.54]#(106, 210, 5)
point5Approach = [60.22+ correctionVal2, (-24.93), (-76.04), 10.97 + correctionVal, 90, 60.22]#(196, 190, 40)
point5 = [60.22+ correctionVal2, (-29.7), (-86.34), 26.04 + correctionVal, 90, 60.22] #(196, 190, 5)
point6Approach = [54.09+ correctionVal2, (-11.41), (-94.42), 15.83 + correctionVal, 90, 54.09] #(196, 140, 40)
point6 = [54.09+ correctionVal2, (-17.55), (-104.74), 32.3 + correctionVal, 90, 54.09] #(196, 140, 5)
point7Approach = [36.26 + correctionVal2, (-22.82), (-79.12), 11.94 + correctionVal, 90, 36.26] #(251, 85, 40)
point7 = [36.26 + correctionVal2, (-27.82), (-89.35), 27.17 + correctionVal, 90, 36.26] #(251, 85, 5)
point8Approach = [26.82 + correctionVal2, (-17.99), (-85.9), 13.89 + correctionVal, 90, 26.82] #(251, 35, 40)
point8 = [26.82 + correctionVal2, (-23.49), (-96.08), 29.57 + correctionVal, 90, 26.82] #(251, 35, 5)
point9Approach = [16.24 + correctionVal2, (-17.17), (-87.01), 14.17 + correctionVal, 90, 16.24] #(251, -15, 40)
point9 = [16.24 + correctionVal2, (-22.75), (-97.19), 29.94 + correctionVal, 90, 16.24] #(251, -15, 5)
point10Approach = [5.19 + correctionVal2, (-21.42), (-82.55), 12.96 + correctionVal, 90, 5.19] #(251, -65, 40)
point10 = [5.19 + correctionVal2, (-25.67), (-92.73), 28.4 + correctionVal, 90, 5.19] #(251, -65, 5)
pointDropOff = [(-66.3), (-11.84), (-64.92), (-13.24) + correctionVal, 90, (-66.3)] #(0, -255, 100)

t.sleep(6)
mc.send_angles(point1Approach, speed)
t.sleep(5)
mc.send_angles(point1, speed)
t.sleep(3)
mc.send_angles(point1Approach, speed)
t.sleep(3)
mc.send_angles(point2Approach, speed)
t.sleep(3)
mc.send_angles(point2, speed)
t.sleep(3)
mc.send_angles(point2Approach, speed)
t.sleep(3)
mc.send_angles(point3Approach, speed)
t.sleep(3)
mc.send_angles(point3, speed)
t.sleep(3)
mc.send_angles(point3Approach, speed)
t.sleep(3)
mc.send_angles(point4Approach, speed)
t.sleep(3)
mc.send_angles(point4, speed)
t.sleep(3)
mc.send_angles(point4Approach, speed)
t.sleep(3)
mc.send_angles(point5Approach, speed)
t.sleep(3)
mc.send_angles(point5, speed)
t.sleep(3)
mc.send_angles(point5Approach, speed)
t.sleep(3)
mc.send_angles(point6Approach, speed)
t.sleep(3)
mc.send_angles(point6, speed)
t.sleep(3)
mc.send_angles(point6Approach, speed)
t.sleep(3)
mc.send_angles(point7Approach, speed)
t.sleep(3)
mc.send_angles(point7, speed)
t.sleep(3)
mc.send_angles(point7Approach, speed)
t.sleep(3)
mc.send_angles(point8Approach, speed)
t.sleep(3)
mc.send_angles(point8, speed)
t.sleep(3)
mc.send_angles(point8Approach, speed)
t.sleep(3)
mc.send_angles(point9Approach, speed)
t.sleep(3)
mc.send_angles(point9, speed)
t.sleep(3)
mc.send_angles(point9Approach, speed)
t.sleep(3)
mc.send_angles(point10Approach, speed)
t.sleep(3)
mc.send_angles(point10, speed)
t.sleep(3)
mc.send_angles(point10Approach, speed)
t.sleep(5)
mc.send_angles(pointDropOff, speed)